<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Cleia
  %%
  Copyright (C) 2013 Abada Servicios Desarrollo (investigacion@abadasoft.com)
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as
  published by the Free Software Foundation, either version 3 of the 
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public 
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/gpl-3.0.html>.
  #L%
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cloud="http://schema.cloudfoundry.org/spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd
">
    <!-- Web Security -->         
    <security:http auto-config='false' use-expressions="true" entry-point-ref="authenticationEntryPoint">          <!--access="IS_AUTHENTICATED_ANONYMOUSLY"-->
        <!--security:intercept-url pattern="/rs/identity/sid" access="permitAll" />        
        <security:intercept-url pattern="/rs/server/**" access="permitAll" /-->        
        <security:intercept-url pattern="/rs/identity/secure/j_security_check"  access="permitAll" requires-channel="any"/>        
        <security:intercept-url pattern="${cleia.server.url.roles}"  access="isAuthenticated()" requires-channel="any"/>
        <security:intercept-url pattern="${cleia.server.url.dni.roles}"  access="isAuthenticated()" requires-channel="any"/>
        <security:intercept-url pattern="/**"  access="isAuthenticated()" requires-channel="https"/>
        <security:form-login always-use-default-target='false' login-processing-url="/rs/identity/secure/j_security_check" default-target-url="/rs/identity/sid" authentication-failure-url="/"/>
        <security:custom-filter  position="BASIC_AUTH_FILTER" ref="basicAuthenticationFilter" />
        <security:custom-filter position="PRE_AUTH_FILTER" ref="x509filter"/>
    </security:http>
    
    <bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationEntryPoint" ref="authenticationEntryPoint"/>
    </bean>

    <bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
        <property name="realmName" value="CLEIA Server"/>
    </bean>
    
    <bean id="x509filter" class="com.abada.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter">
        <property name="filterSubject" value="serialNumber=(.*?),"/>
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>
    
    <bean id="dniAuthenticationProvider" class="com.abada.springframework.security.authentication.dni.DniAuthenticationProvider">
        <property name="dniAuthenticationDao" ref="loginDao" />
    </bean>
    
    <security:authentication-manager alias="authenticationManager">        
        <security:authentication-provider ref="dniAuthenticationProvider" /> <!-- DNIe x509 -->
        <security:authentication-provider ref="userDaoAuthenticationProvider" /><!-- BBDD -->        
        <!-- LOCAL -->
        <security:authentication-provider>
            <security:user-service>
                <security:user name="dnie_user" password="dnie_user_1234" authorities="ROLE_DNI_CONSULT" /><!-- Usuario necesario para el dni, si se usa otro modo de authentication se debe meter este usuario o asegurarse que en la parte web se configure un usuario valido para esto, notese que no tiene permisos para casi nada -->                
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>            
    
    <!-- BBDD -->        
    <bean id="userDaoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="loginDao" />
        <property name="passwordEncoder" ref="sha1PasswordEncoder" />
    </bean>  
    
    <bean id="sha1PasswordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
    
    ${db.configuration}               
    
    <bean id="transactionManagerLogin" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerLogin" />        
    </bean>
    
    <bean id="entityManagerLogin" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="cleiaPU" />
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />            
        </property>
        <property name="dataSource" ref="ds1" />
    </bean> 

    <bean id="loginDao" class="com.abada.cleia.dao.impl.LoginDaoImpl">
        <property name="entityManagerFactoryBean" ref="entityManagerLogin"/>
    </bean>
    <!-- Remove in production, generate and import correct certificates -->
    <!-- bean class="com.abada.cleia.rest.DisableCertificateHostnameValidator"/-->
</beans>

